angular tutorials : 

1. angular js is a library but angular is a framework
2. Developed by google
3. benefits of angular : 1. Speed and performance 2. smaller applications 3. modular applications 4. Use typescript 5. single page applications 6. Cross platform

blocks of angular : 
1. modules : just like a class or container , an angular application has atleast one root module and if there are more than one then they are the featured modules 
2. components : building blocks it usually consist opf multiple parts like ; ts file , templates , testing and css files
3. services : function or objects to perform a specific task
4. directive : to extend the power of HTML attributes and change the appearance and behaviour of DOM Element


PWA : Progressive Web Applications : Just like an app 

TypeScript : Superset of Javascript 
2. Strongly Typed
3. Developed by Microsoft

TypeScript provides Type Safety : 
1. Free from Type Errors 
2. Free from undefined and null values 
3. Types are stripped when converting from Ts to js

package.json : to maintain the dependencies 

package-lock.json : to maintain the exact versions of the dependencies for mainitaining the consistency among the environments

tsc config : maintains the configuration for the project 
target : the version of ecma in which program to compile 
module : in which you want to run your typescript whether it is browser or OS 

single Page Applications : In this everytime new page is not refreshed so making it fast to view 
2. It does not make requests to server for every URL requests

Variable assignment is mandatory in typescript

reduce function in js : to calculate each of the number of array like [10,2,3,4] = 10+2+3+4

enum : just like class 

can use const enum to trim some lines of code basically used in production

tuples : just like Arrays but number of element and each element type is defined in ts

any datatype : it suggests that a particular variable has no specific datatype it can be assigned to any values
be it string or number 

note : try to avoid any as much as possible 

datatypes : string , number , arrays, tuples , any, void , boolean , never , enum



Angular : 

ng new hotelinventoryapp --createApplication=false -- to create empty workspace in which we will add projects later

ng g app hotel - to add a new project

ng new hotelinvenmtiry2 - to create project with the defualt project

spec.json - for testing 

.app.json - for original code
.lock.json - to maintain the packages so that package does not affect the application , need to commit the file

karma.conf.json - to execute the test , write the code in jasmine and test it on karma

editor.conf : to configure some settings of the editor

browserlistrc : to get the list of supported browsers

polyfills : to support the features that are not supported by the older browers

main.ts : main application starts

mono-repo : to use multiple appications in single workspace
Advantages : 1. Create and maintain multiple appications in  a single repo
2. Deploy multiple apps from the same repo
3. Easy to share the code within
4. Use libraries within the project

to run the application use : ng server -o within the project folder

@NgModules : gives the info about the modules we are using 

Component : It is the view to be render on the screen

Under Component Annotation : 

Selector : How to identify the particular component in the Angular 
templateUrl : to set the html file path
StyleUrls : In Array to define the various style sheets used 
template : to write inline html
styles : to write inline styles 


ngserve command runs in watch mode means saved changes will be watched and compiled automatically 

if angular.json or package.json changes then it does not watched and need to restart the server again
prefix in angular.json : should be there to avoid the conflict with other html tags

ng generate component rooms -- to create a new component in angular

binding syntax : to bind the data with the front end appilcations

1. Interpolation : using {{varName}} to bind the data 
2. Property binding : bind the data with the valid html tag property
3. Event Binding : To bind the data with the event

Directives : To change the DOM

Structural : Denoted with a star symbol at first place
			 modify the dom in such a way that elements are added or reduced 

1. ngIf : To put the condition , entire div will be gone from the DOM
2. ngFor : For Loop
3. ngSwitch : Just like switch case with use of *ngSwitchCase and *ngSwitchDefault

Attribute :  Star symbol not needed 
			 Only modifies the element not to add or reduce the element in dom

1. ngClass : To use differnet styles for the different users according to their preferences

2. ngStyle : To set Style


@Input : to communicate between parent and child component : used in the child component to use the property as attribute in the parent component : lets data to be send from parent to child component

@Output : To send data from child to parent component : Generally sends the event 

emit function : to send the data to the parent component

to exchange the data between parent and child component using @Output
In child component : 
1. Create an Event with eventEmitter Class using @Output
2. create a div in html with event and define a function 
3. in the ts file , write the function to emit the event with the data

In parent component : 
1. In html file where the tag is defined , define the event with some local function for the event with args $event for passing the emitted event
2. In the ts file write the function and use the data accordingly 

Change Detection : onPush : It will not allow to change the same object : concept of immutability 




